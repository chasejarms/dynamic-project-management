import { ITagsPriorityListMapping } from "../../../../components/prioritizedTagsCard";
import { IColumn } from "../../../../models/column";
import { TagColor } from "../../../../models/tagColor";
import { ITicket } from "../../../../models/ticket";

const columnIdsMapping = {
    toDo: "1",
    inProgress: "2",
    qaReview: "3",
    codeReview: "4",
    mergedToTest: "5",
    deployedToProduction: "6",
};

export const mockTagsMapping: ITagsPriorityListMapping = {
    Defect: {
        name: "Defect",
        color: TagColor.Red,
        itemId: "1",
        belongsTo: "",
    },
    Feature: {
        name: "Feature",
        color: TagColor.Blue,
        itemId: "2",
        belongsTo: "",
    },
    "AWS Migration": {
        name: "AWS Migration",
        color: TagColor.Grey,
        itemId: "3",
        belongsTo: "",
    },
    "Chat Functionality": {
        name: "Chat Functionality",
        color: TagColor.Grey,
        itemId: "4",
        belongsTo: "",
    },
    Reporting: {
        name: "Reporting",
        color: TagColor.Grey,
        itemId: "5",
        belongsTo: "",
    },
    "Administrative Controls": {
        name: "Administrative Controls",
        color: TagColor.Grey,
        itemId: "6",
        belongsTo: "",
    },
    "Continuous Integration": {
        name: "Continuous Integration",
        color: TagColor.Grey,
        itemId: "7",
        belongsTo: "",
    },
    "Image Upload": {
        name: "Image Upload",
        color: TagColor.Grey,
        itemId: "8",
        belongsTo: "",
    },
};

export const mockColumnData: IColumn[] = [
    {
        name: "To Do",
        id: columnIdsMapping.toDo,
        canBeModified: true,
    },
    {
        name: "In Progress",
        id: columnIdsMapping.inProgress,
        canBeModified: true,
    },
    {
        name: "QA Review",
        id: columnIdsMapping.qaReview,
        canBeModified: true,
    },
    {
        name: "Code Review",
        id: columnIdsMapping.codeReview,
        canBeModified: true,
    },
    {
        name: "Merged To Test",
        id: columnIdsMapping.mergedToTest,
        canBeModified: true,
    },
    {
        name: "Deployed to Production",
        id: columnIdsMapping.deployedToProduction,
        canBeModified: true,
    },
];

export const mockTickets: ITicket[] = [
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Investigate Hanging Requests",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["AWS Migration"], mockTagsMapping.Defect],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.mergedToTest,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Investigate Performance Decrease",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["AWS Migration"], mockTagsMapping.Defect],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.qaReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Move Data to RDS",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["AWS Migration"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.toDo,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Set up Lambda Handlers",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["AWS Migration"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.toDo,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Configure API Gateway Auth",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["AWS Migration"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.inProgress,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Transfer Files to S3",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["AWS Migration"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.inProgress,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Fix Double Message Creation",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Defect],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.inProgress,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Message Sender is Blank",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Defect],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.mergedToTest,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Edit Message Endpoint Not Working",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Defect],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.deployedToProduction,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Establish Web Socket Connection",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.mergedToTest,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Send Push Notification",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.inProgress,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Allow Cross-User Tagging",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.toDo,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Establish Web Socket Connection",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping["Chat Functionality"], mockTagsMapping.Feature],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.inProgress,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Set Up Reporting Rights",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Feature, mockTagsMapping.Reporting],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.codeReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Allow for PDF Downloads",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Feature, mockTagsMapping.Reporting],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.codeReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Fix Minor Typo",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Reporting, mockTagsMapping.Defect],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.qaReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Enable Custom Headers",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Feature, mockTagsMapping.Reporting],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.qaReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Turn On Report Builder UI",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Feature, mockTagsMapping.Reporting],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.qaReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Begin Using Radio Buttons",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [
            mockTagsMapping["Administrative Controls"],
            mockTagsMapping.Feature,
        ],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.toDo,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Enable Beta Users",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [
            mockTagsMapping["Administrative Controls"],
            mockTagsMapping.Feature,
        ],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.deployedToProduction,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Augment Existing Rights",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [
            mockTagsMapping["Administrative Controls"],
            mockTagsMapping.Feature,
        ],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.deployedToProduction,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Rights Not Applying Correctly",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [
            mockTagsMapping["Administrative Controls"],
            mockTagsMapping.Defect,
        ],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.inProgress,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Not All Controls Are Visible",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [
            mockTagsMapping["Administrative Controls"],
            mockTagsMapping.Defect,
        ],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.qaReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Validate Against Non-Image File Types",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Feature, mockTagsMapping["Image Upload"]],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.toDo,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Add Excel File Support",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Feature, mockTagsMapping["Image Upload"]],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.mergedToTest,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "Multipart Upload is Broken",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Defect, mockTagsMapping["Image Upload"]],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.codeReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
    {
        itemId: "",
        belongsTo: "",
        shortenedItemId: "",
        title: "File With Spaces Returns 500 Error",
        summary: "",
        sections: [],
        createdTimestamp: "",
        lastModifiedTimestamp: "",
        completedTimestamp: "",
        tags: [mockTagsMapping.Defect, mockTagsMapping["Image Upload"]],
        simplifiedTicketTemplate: {
            title: {
                label: "",
            },
            summary: {
                isRequired: false,
                label: "",
            },
            sections: [],
        },
        columnId: columnIdsMapping.codeReview,
        ticketIdForTicketInformation: "",
        assignedTo: "",
    },
];

export const mockPriorities: string[] = [
    mockTagsMapping["AWS Migration"].name,
    mockTagsMapping["Chat Functionality"].name,
    mockTagsMapping.Reporting.name,
    mockTagsMapping["Administrative Controls"].name,
    // mockTagsMapping["Continuous Integration"].name,
    mockTagsMapping["Image Upload"].name,
    mockTagsMapping.Defect.name,
    mockTagsMapping.Feature.name,
];
